FROM arch:latest

USER arch
WORKDIR /home/arch

# Base installed, lets get specific
RUN yay -S --noconfirm \
  vulkan-headers \
  vulkan-icd-loader \
  vulkan-radeon \
  shaderc \
  downgrade \
  sudo \
  && sudo pacman -Scc --noconfirm
  
RUN sudo downgrade --ignore never \
  comgr=${ROCM_VERSION} \
  composable-kernel=${ROCM_VERSION} \
  hipblas-common=${ROCM_VERSION} \
  hipblaslt=${ROCM_VERSION} \
  hsa-rocr=${ROCM_VERSION}-2 \
  rocm-cmake=${ROCM_VERSION} \
  rocm-device-libs=${ROCM_VERSION} \
  rocm-language-runtime=${ROCM_VERSION} \
  rocm-smi-lib=${ROCM_VERSION} \
  rocminfo=${ROCM_VERSION} \
  rocprofiler-register=${ROCM_VERSION} \
  roctracer=${ROCM_VERSION} \
  hip-runtime-amd=${ROCM_VERSION} \
  hipblas=${ROCM_VERSION} \
  hipcub=${ROCM_VERSION} \
  hipfft=${ROCM_VERSION} \
  hiprand=${ROCM_VERSION} \
  hipsolver=${ROCM_VERSION} \
  hipsparse=${ROCM_VERSION} \
  rccl=${ROCM_VERSION} \
  rocalution=${ROCM_VERSION} \
  rocblas=${ROCM_VERSION} \
  rocfft=${ROCM_VERSION} \
  rocm-core=${ROCM_VERSION} \
  rocm-hip-libraries=${ROCM_VERSION} \
  rocm-hip-runtime=${ROCM_VERSION} \
  rocm-hip-sdk=${ROCM_VERSION} \
  rocm-llvm=${ROCM_VERSION} \
  rocprim=${ROCM_VERSION} \
  rocrand=${ROCM_VERSION} \
  rocsolver=${ROCM_VERSION} \
  rocsparse=${ROCM_VERSION} \
  rocthrust=${ROCM_VERSION} \
  rocwmma=${ROCM_VERSION} \
  -- --noconfirm

#STABLE-DIFFUSION.CPP
#https://github.com/leejet/stable-diffusion.cpp
ENV HIPCXX="/opt/rocm/lib/llvm/bin/clang" 
ENV HIP_PATH="/opt/rocm"
RUN git clone --recursive https://github.com/leejet/stable-diffusion.cpp
RUN mv stable-diffusion.cpp stable-diffusion.cpp.rocm && cp -r stable-diffusion.cpp.rocm stable-diffusion.cpp.vulkan
RUN cd stable-diffusion.cpp.rocm && cmake -B build -G "Ninja" \
    -DCMAKE_C_COMPILER=/opt/rocm/lib/llvm/bin/clang \
    -DCMAKE_CXX_COMPILER=/opt/rocm/lib/llvm/bin/clang++ \
    -DSD_HIPBLAS=ON \
    -DCMAKE_BUILD_TYPE=Release \
    -DAMDGPU_TARGETS=gfx1100
RUN cd stable-diffusion.cpp.rocm && cmake --build build --config Release --parallel
RUN cd stable-diffusion.cpp.vulkan && cmake -B build -G "Ninja" \
    -DSD_VULKAN=ON \
    -DCMAKE_BUILD_TYPE=Release \
    -DAMDGPU_TARGETS=gfx1100
RUN cd stable-diffusion.cpp.vulkan && cmake --build build --config Release --parallel
#https://github.com/daniandtheweb/sd.cpp-webui
RUN git clone https://github.com/daniandtheweb/sd.cpp-webui.git
RUN mv sd.cpp-webui sd.cpp-webui.rocm && cp -r sd.cpp-webui.rocm sd.cpp-webui.vulkan
RUN cp stable-diffusion.cpp.rocm/build/bin/sd sd.cpp-webui.rocm && cp stable-diffusion.cpp.vulkan/build/bin/sd sd.cpp-webui.vulkan
RUN cd sd.cpp-webui.rocm && \
    chmod a+x sdcpp_webui.sh && \
    python3 -m venv venv && \
    source venv/bin/activate && \
    pip install -r requirements.txt --upgrade pip
RUN cd sd.cpp-webui.vulkan && \
    chmod a+x sdcpp_webui.sh && \
    python3 -m venv venv && \
    source venv/bin/activate && \
    pip install -r requirements.txt --upgrade pip
